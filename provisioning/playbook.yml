- hosts: all

  # Update system packages
  pre_tasks:
    - apt:
        pkg:
          - libasound2
          - libatk-bridge2.0-0
          - libgbm-dev
          - libgconf-2-4
          - libgtk2.0-0
          - libgtk-3-0
          - libnotify-dev
          - libnss3
          - libxss1
          - libxtst6
          - npm
          - virtualbox-guest-dkms
          - virtualbox-guest-utils
          - virtualbox-guest-x11
          - xauth
          - xfce4
          - xvfb
        update_cache: yes
      become: true
      when: ansible_os_family == "Debian"

  roles:
    # Install docker
    - role: geerlingguy.docker
      become: true
      docker_users:
        - vagrant
    # Install php cli
    - role: geerlingguy.php
      become: true
      php_packages: ['php-cli', 'php-mbstring', 'php-xml']
      php_enable_webserver: false
      php_default_version_debian: "7.2"
    # Install composer
    - role: geerlingguy.composer
      become: true
      composer_home_path: '~/.composer'
      composer_home_owner: vagrant
      composer_home_group: vagrant
      composer_global_packages: [{ name: 'drupal/coder', release: '8.3.*' }]
      composer_add_to_path: true
      composer_version_branch: ''
      composer_version: '1.10.12'

  tasks:
    - name: Register Drupal coding standard
      command: phpcs --config-set installed_paths ~/.composer/vendor/drupal/coder/coder_sniffer

    - name: Add composer bin to path
      become: true
      lineinfile: dest=/etc/bash.bashrc line='export PATH=$PATH:~/.composer/vendor/bin' create=yes

    - name: Get latest version of lando
      uri:
        url: https://api.github.com/repos/lando/lando/releases/latest
        return_content: true
      register: lando_latest

    - name: "get .deb package URL for {{ lando_latest.json.tag_name }}"
      set_fact:
        lando_deb_url: "{{ item.browser_download_url }}"
      loop: "{{ lando_latest.json.assets }}"
      when: item.name | regex_search("^lando-v.*\.deb$")

    - name: Install lando .deb package
      become: true
      apt:
        deb: "{{ lando_deb_url }}"

    - name: Configure git name
      git_config:
        name: user.name
        scope: global
        value: "{{ gh_name }}"

    - name: Configure git email address
      git_config:
        name: user.email
        scope: global
        value: "{{ gh_email }}"

    - name: Clone the va.gov CMS repo
      ansible.builtin.git:
        repo: "https://github.com/{{ gh_username }}/va.gov-cms.git"
        version: master
        dest: "{{ app_dir }}"
        accept_hostkey: yes
        force: no
      ignore_errors: yes
      register: clone_command_res

    - name: Ignore cloning errors on re-provision
      assert:
        that: "not clone_command_res['failed'] or 'already exists and is not an empty directory' in clone_command_res['msg'].lower() or 'local modifications exist in repository' in clone_command_res['msg'].lower()"

    - name: Add git upstream remote
      command: git remote add upstream git@github.com:department-of-veterans-affairs/va.gov-cms.git
      ignore_errors: yes
      args:
        chdir: "{{ app_dir }}"

    # See https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc for more information.
    - name: Increase file change watch limit
      become: true
      sysctl:
        name: fs.inotify.max_user_watches
        value: '524288'

    - name: Start docker
      command: systemctl start docker
      become: true
      register: docker_output

